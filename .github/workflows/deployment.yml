name: Building and pushing a docker image to Amazon ECR
on:
  push:
    branches: [ "main" ]

permissions:
  issues: write
  contents: read

env:
  AWS_DEFAULT_REGION: eu-west-1
  AWS_DEFAULT_OUTPUT: json
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  CONTAINER_IMAGE: notify2-app:${{ github.sha }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Find and Replace
      uses: jacobtomlinson/gha-find-replace@v3
      with:
        find: ":{tag}"
        replace: ":${{ github.sha }}"
        include: "Dockerrun.aws.json"

    - name: Find and Replace
      uses: jacobtomlinson/gha-find-replace@v3
      with:
        find: "{tag}"
        replace: "${{ github.sha }}"
        include: "Dockerrun.aws.json"

    - name: Find and Replace
      uses: jacobtomlinson/gha-find-replace@v3
      with:
        find: "{environment}"
        replace: "Production"
        include: "Dockerrun.aws.json"

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      run: |
        docker build -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$CONTAINER_IMAGE .
        docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$CONTAINER_IMAGE

    - name: Generate deployment package
      run: zip deploy.zip Dockerrun.aws.json

    - name: Deploy to EB
      uses: einaregilsson/beanstalk-deploy@v21
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        application_name: notify2-app
        environment_name: rnotify2-app
        wait_for_environment_recovery: 300
        use_existing_version_if_available: true
        version_label: ${{ github.sha }}
        region: eu-west-1
        deployment_package: deploy.zip

